version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:latest
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #   ports:
  #     - '8081:8081'

  # connect:
  #   hostname: connect
  #   image: jcustenborder/kafka-connect-all
  #   depends_on:
  #   - schema-registry
  #   - kafka
  #   ports:
  #   - '8083:8083'
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
  #     CONNECT_REST_ADVERTISED_HOST_NAME: target-connect
  #     CONNECT_PRODUCER_COMPRESSION_TYPE: lz4
  #     CONNECT_GROUP_ID: connect
  #     CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  #     CONNECT_CONFIG_STORAGE_TOPIC: connect_config
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_OFFSET_STORAGE_TOPIC: connect_offset
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_STATUS_STORAGE_TOPIC: connect_status
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
  #     CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
  #     CONNECT_INTERNAL_KEY_CONVERTER_SCHEMAS_ENABLE: 'false'
  #     CONNECT_INTERNAL_VALUE_CONVERTER_SCHEMAS_ENABLE: 'false'
  #     CONNECT_LOG4J_LOGGERS: 'org.reflections=ERROR'
  #   volumes:
  #     - './books.xsd:/books.xsd:ro'
  # control-center:
  #   image: confluentinc/cp-enterprise-control-center:latest
  #   depends_on:
  #   - zookeeper
  #   - kafka
  #   - connect
  #   ports:
  #   - "9022:9021"
  #   environment:
  #     CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081/"
  #     CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:9092"
  #     CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
  #     CONTROL_CENTER_CONNECT_CLUSTER: 'connect:8083'
  #     CONTROL_CENTER_REPLICATION_FACTOR: 1
  #     CONTROL_CENTER_KSQL_ENABLE: "false"

  # kafdrop:
  #   image: obsidiandynamics/kafdrop:latest
  #   networks: 
  #     - broker-kafka
  #   depends_on:
  #     - kafka
  #   ports:
  #     - 19000:9000
  #   environment:
  #     KAFKA_BROKERCONNECT: kafka:29092
  
  # rabbitmq:
  #   image: rabbitmq:management-alpine
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   networks:
  #     - rabbitmq_go_net

networks: 
  broker-kafka:
    driver: bridge
  # rabbitmq_go_net:
  #   driver: bridge