version: '3.9'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-enterprise-kafka:latest
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      LOG_LEVEL: DEBUG
  
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  postgresql-primary:
    image: bitnami/postgresql:latest
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - postgresql_master_data:/bitnami/postgresql
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
    environment:
      POSTGRESQL_PGAUDIT_LOG: READ,WRITE
      POSTGRESQL_LOG_HOSTNAME: "true"
      POSTGRESQL_REPLICATION_MODE: master
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_user
      POSTGRESQL_USERNAME: postgres
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_DATABASE: postgres
      ALLOW_EMPTY_PASSWORD: "yes"

  postgresql-replica:
    image: bitnami/postgresql:latest
    restart: always
    ports:
      - '5433:5432'
    depends_on:
      - postgresql-primary
    environment:
      POSTGRESQL_PASSWORD: postgres
      POSTGRESQL_MASTER_HOST: postgresql-primary
      POSTGRESQL_PGAUDIT_LOG: READ
      POSTGRESQL_LOG_HOSTNAME: "true"
      POSTGRESQL_REPLICATION_MODE: slave
      POSTGRESQL_REPLICATION_USER: repl_user
      POSTGRESQL_REPLICATION_PASSWORD: repl_user
      POSTGRESQL_MASTER_PORT_NUMBER: 5432
      ALLOW_EMPTY_PASSWORD: "yes"

  pgbouncer:
    image: edoburu/pgbouncer:latest
    restart: always
    ports:
      - '6432:6432'
    environment:
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgresql-primary
      DB_PORT: 5432
      POOL_MODE: session
      MAX_CLIENT_CONN: 100
      DEFAULT_POOL_SIZE: 20
      AUTH_TYPE: md5
      AUTH_FILE: /etc/pgbouncer/users.txt
    volumes:
      - ./pgbouncer/users.txt:/etc/pgbouncer/users.txt

volumes:
  postgresql_master_data:
    driver: local

networks: 
  broker-kafka:
    driver: bridge
